# Docker Compose override for Staging environment
version: '3.8'

services:
  backend:
    environment:
      - ENVIRONMENT=staging
      - DEBUG=false
      - LOG_LEVEL=INFO
    deploy:
      replicas: 2
      resources:
        limits:
          cpus: '1.0'
          memory: 1G
        reservations:
          cpus: '0.5'
          memory: 512M
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  frontend:
    environment:
      - NGINX_ENVSUBST_OUTPUT_DIR=/etc/nginx/conf.d
      - VITE_API_URL=https://api-staging.quest-edu.com
      - VITE_WEBSOCKET_URL=wss://api-staging.quest-edu.com
    deploy:
      replicas: 2
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
        reservations:
          cpus: '0.2'
          memory: 256M

  postgres:
    environment:
      - POSTGRES_DB=quest_edu_staging
      - POSTGRES_USER=quest_staging
    volumes:
      - postgres_staging_data:/var/lib/postgresql/data
      - ./config/postgres/staging-postgresql.conf:/etc/postgresql/postgresql.conf
    command: >
      postgres
      -c config_file=/etc/postgresql/postgresql.conf
      -c log_statement=mod
      -c log_min_duration_statement=1000
    deploy:
      resources:
        limits:
          cpus: '2.0'
          memory: 2G
        reservations:
          cpus: '1.0'
          memory: 1G

  redis:
    volumes:
      - redis_staging_data:/data
      - ./config/redis/staging-redis.conf:/usr/local/etc/redis/redis.conf
    command: redis-server /usr/local/etc/redis/redis.conf
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
        reservations:
          cpus: '0.2'
          memory: 256M

  nginx:
    volumes:
      - ./config/nginx/staging-nginx.conf:/etc/nginx/nginx.conf:ro
      - ./config/nginx/staging-default.conf:/etc/nginx/conf.d/default.conf:ro
      - ./ssl/staging:/etc/nginx/ssl:ro
    ports:
      - "443:443"
      - "80:80"
    environment:
      - DOMAIN=staging.quest-edu.com
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 256M
        reservations:
          cpus: '0.1'
          memory: 128M

  prometheus:
    volumes:
      - ./config/prometheus/staging-prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_staging_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=30d'
      - '--web.enable-lifecycle'

  grafana:
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD}
      - GF_SERVER_DOMAIN=monitoring-staging.quest-edu.com
      - GF_SERVER_ROOT_URL=https://monitoring-staging.quest-edu.com
    volumes:
      - grafana_staging_data:/var/lib/grafana
      - ./config/grafana/staging-datasources.yml:/etc/grafana/provisioning/datasources/datasources.yml
      - ./config/grafana/staging-dashboards.yml:/etc/grafana/provisioning/dashboards/dashboards.yml

  # Log aggregation for staging
  fluentd:
    image: fluent/fluentd:v1.16-debian-1
    container_name: fluentd
    volumes:
      - ./config/fluentd/staging-fluent.conf:/fluentd/etc/fluent.conf
      - ./logs:/var/log/quest-edu
    environment:
      - FLUENTD_CONF=fluent.conf
    ports:
      - "24224:24224"
      - "24224:24224/udp"
    depends_on:
      - backend
      - frontend

volumes:
  postgres_staging_data:
    driver: local
    driver_opts:
      type: none
      device: /opt/quest-edu/data/postgres-staging
      o: bind
  
  redis_staging_data:
    driver: local
    driver_opts:
      type: none
      device: /opt/quest-edu/data/redis-staging
      o: bind
  
  prometheus_staging_data:
    driver: local
    driver_opts:
      type: none
      device: /opt/quest-edu/data/prometheus-staging
      o: bind
  
  grafana_staging_data:
    driver: local
    driver_opts:
      type: none
      device: /opt/quest-edu/data/grafana-staging
      o: bind

networks:
  default:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16